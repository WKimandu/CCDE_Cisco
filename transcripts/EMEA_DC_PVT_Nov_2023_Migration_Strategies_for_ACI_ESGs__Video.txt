 Thank you so much, Joe. Now I'm feeling like a slice of bread. I'm opening and closing today's session. First of all, apologies for not being there in person. As Joe mentioned, I got COVID a few days before traveling, so I couldn't be there in person. But I'm trying to make the session the more engaging I can, so I'm going to feel like I am in the room. Today we're going to talk about ESGs and point security groups and how to migrate from traditional environment where you can have an network-centric approach using EPGs and how you can do that migration into ESGs and prepare your customer to do further segmentation when they need or when they want to. So that's going to be the end goal for today's session, discussing how we can migrate from an environment using EPGs and no segmentation at all using EPGs. To an environment where we are using ESGs for segmentation. During today's session, we're going to use Slido, same as before. It's exactly the same Slido event as you were using yesterday. But for those of you in the room, probably you lost the Slido window already, so you can use this QR code to scan it. I'm going to give you a minute so you can have time to scan this QR code and connect to the Slido. People connecting remotely, they have no problem because they have the WebEx integration. So in the WebEx window, you will see right now popping up the Slido poll that we're going to open to begin with today. Okay, the first poll that we're going to open is to get a little bit more feedback about how you are using or how your customers are using ESG today. So, as you always mentioned yesterday, that feedback is very important for us, because we use that to also tell our product management team and our engineering team how you use ESGs, how our customers use ESG, and that helps shaping the product. So, while the poll is running, I'm going to go through the agenda. So we are going to start with an introduction to ESGs and ESG selectors that we have available. It's going to be a very light introduction because I want to focus more in the second part of the session, which is going to be about ESG design considerations, all those kind of things that you need to have in mind while you are doing this migration, while you are preparing this migration to ESG. We're going to go through a migration scenario. As I mentioned, we're going to use the migration scenario, which is the most typical one, or the one I believe is the most typical one, which is having no segmentation at all, a traditional network centric model, and migrate to a model where you have some level of segmentation with ESG. I'll show you different scenarios where you can stop doing segmentation, depending on what your customer wants. You see route leaking as well. I will probably not have time to cover route leaking too much, but at least I will provide a couple of ideas. In a nutshell, basically route leaking with ESG is super, super, super simple. So, that's basically what you have to keep in mind. It's super straightforward, but I will tell you just a little bit of how to do it. Last but not least. We have a frequently asked questions section, which is totally for your reference. I'm not going to cover that today, but when you receive the PDF, that's going to be there. It's going to be there together with a few other slides that I'm not showing today, but they are also on the deck for your reference. So, in total, the deck is like, 91 slides. I'm not covering 91 slides, as you can imagine. So, but those are there for your reference after the session. Perfect. So, with that, let's move on into the ESG introduction. What is ESG? ESG is basically a new network security component that we introduced in Cisco ACI 5.0. But actually, it was very, there were a lot of enhancements on 5.2. So, if you ask me, I will not recommend you to run ESG before 5.2. 5.2 is the version where you can start to consider ESG. We're going to see a few things that we introduced on 5.2 later, and you're going to understand why I'm telling you that 5.2 is probably not the version to start using ESG. That could be one of the reasons why many of you are not adopting ESG today in your customers, but there could be other reasons as well. So, one of the questions in the poll is, what are the reasons why you're not adopting ESG today? So, from the result that I'm seeing right now in the screen. Okay. Okay. So, 50% of you actually, the reason is because you are running, your customer is running versions below 5.2. So, actually, I was right, but there are other reasons as well. So, please let us know what is the reason why you are not using ESG today. What is the, basically, the main idea of ESG? The main idea is to decouple networking and security. The networking part is going to be still done using bridge domains, PRS, and traditional EPGs. And the security part is going to be moved to the next part. So, the security part is going to be moved to ESG. So, when we migrate to ESG, you are going to see that we no longer apply contrast with EPGs at all. We focus all the security using ESG. EPGs is just to provision the VLAN in the port and map bridge domains to particular port and interface. Okay. That's going to be basically the idea. We are going to win something else as well. The VRF RAS leaking is going to get simplified. It's not going to be longer related to subnets under the EPG. So, how I apply the contract to produce the leaking. Now, it's going to be way more straightforward. You're going to decide where you're going to leak the route. What is the route that you're going to leak? And that's going to happen automatically. You don't need to do any special configuration with subnets under EPGs or anything like that. You're going to see that later. So, what are the benefits of ESG? Benefit number one is that ESGs are not tied to a bridge domain. ESGs are assigned to a VRF. So, that means that now you can have a bridge domain. You can have security groups that expand multiple bridge domains, which is going to give you way more flexibility. Just to give you an example, let's imagine I want to do a segmentation like that in an environment that I have with multiple EPGs per bridge domain and multiple endpoints belonging to different subnets. With EPGs, that will be a bit more complex, right? Because EPGs cannot expand multiple subnets. With ESGs, that's super straightforward because they can take different endpoints on different subnets and group them under the same ESG. So, I can have a bridge domain with no problem. That's going to give me additional flexibility and it's going to also simplify my configuration. But also, it's going to provide me an advantage in terms of TCL resources. With ESGs, in general, I'm going to make a more efficient use of TCL resources. And let me show you an example of why that's going to be the general result. Let's imagine we have a situation like that. We have four subnets and we have endpoints divided across these different subnets. And I want to make a rule like this. Left VMs can talk to application VMs on a given port. But it happens that VMs from web and application, they are distributed across different subnets. If I want to do this with EPGs, that's going to be a configuration similar to this one where they have several contracts, some of them to permit communication across EPGs, some others permitting the port X. It's a messy configuration and also it's using 12 TCAM entries in my switches. What is this? So if I do the same logic with ESGs. With ESGs, because they can expand across multiple bridge domains, I can group those endpoints under the same ESG. My rule is going to be way simpler. It's going to be just ESG web can talk to EPG web on the port X. One single contract and two single entries, one per direction. So we are moving to 12 entries, from 12 entries to two entries. So we are reducing the TCAM utilization a lot. Obviously, not all the examples are going to be the same. So we are going to be like this one. It could be better. It could be not that different in terms of TCAM resources. But in general, the TCAM utilization is going to be lower with ESGs. That's the thing that you need to keep in mind. Not to mention that also configuration is also simpler. We're going to still use EPGs. EPGs are going to be used to provision the static path bindings. There are no static path bindings under the ESGs. That still remains under the EPG. The static path bindings are still under the ESG. The domain association also remains under the EPG. So they are going to be still used, but not for security. As soon as we migrate from EPGs to ESGs, there won't be any contract applied to EPGs anymore. All the contracts will go to the ESGs. Where are those contracts going to be deployed? They're going to be deployed everywhere the VRF is deployed. So this is potentially a disadvantage of ESGs. They're going to be deployed on all the links where the VRF is present, even if they probably are not required. But statistically speaking, in those networking or in API, you cannot predict where the contracts are going to be deployed with EPGs. With ESGs, you have a bit more predictability, which can be also an advantage in terms of planning your utilization of resources. Last but not least, route leaking moves to the VRF level. As I mentioned before, you are not going to use anymore the subnet under the provider EPG. You don't need any contract relationship to produce the leaking. So you can use the SAP network under the provider EPG. Of course, you need a contract to allow the communication, but not for the leaking purposes. The leaking is going to be way more intuitive, way more straightforward. We're going to see on a slide later about that. In terms of ESG selector, how we map endpoints to ESGs. We don't have a static path binding as I mentioned. So how do we map the endpoint to ESG? We use selectors for that. So selector is a configuration that we use. So what we do is we use the same thing that you do under each of the ESG to configure a matching criteria for endpoints. And those matching criteria are going to use some sort of attributes that belongs to the endpoint. It could be a task that you associate to the endpoint, and then we can use stack selectors. It can be the IP address of the endpoint. It could be a map that you associate a task to. It can be multiple things. It can also be an EPG as well, with the EPG selector that we introduced in 5.2. And you're going to see that the EPG selector is going to be key, and then you're going to have a lot of information. So that's why it's so important to use it. And super important in our migration process. We also have a service EPG selector. That's specifically for a super specific use case related to service graphs and PBR. I'm not going to cover that today. We're not going to use it for our migration. But that's also possible if there is another selector for that. So let's just start with the IP subnet selector. This is the first one that was introduced. This actually was the original one, the only one supported in 5.0. So in 5.0, the only way to classify endpoints to a specific endpoint is to use the IP subnet So the last one, ESG, was using the IP of those endpoints. We can use a class 22 or class 128, so the host IP. Or we can use a range of IPs, the subnets, basically. So whatever endpoint matches this subnet selector that you configure under the ESG, it will be classified as belonging, as associated to that ESG. There is something very important that we have to keep in mind with this selector, and also with all the IP-based selectors. All those selectors that use the IP of the endpoint. In order for the endpoint to be classified as part of the ESG and receive the ESG PC task, we need the switch to actually inspect the layer 3 header, the IP header, and read the IP address. And for that, that means that the traffic needs to be routed. If the traffic switch is layered to traffic, the switch doesn't inspect the IP address by default. It only inspects the MAC address. And because of that, the endpoint is not going to get classified. So we need to do a lot of work. And we need to do a lot of work to make sure that the IP address is not classified under the ESG. That's a known caveat that those IP-based selectors have. There are solutions for that. I'm going to cover later on a slide where I talk about the solution for this problem and where you can find this problem as well. But with this particular selector, you can find this problem. So be aware of that. Let's talk about the tag selector. This is probably the most flexible one that we have and the one we're going to use in our migration efforts, especially after the initial migration from EPGs to ESG. How does it work? We're going to configure under the ESG a rule using some specific tags that we can attach to endpoints and other configuration objects on the API. So you're going to configure something like you can see on the screen. The tag here equals app or the VM name has some particular reg ex. You can see that here I'm configuring multiple selectors. So how does it work? How do I combine those different selectors? Well, the operation that we use here is an OR and always an OR. So as long as I match or my endpoint matches one of these two selectors, the endpoint is going to belong to this ESG. It doesn't have to match two of them or all of them. Only matching one is enough for that endpoint to be part of this ESG. And also keep in mind that an endpoint can only match one selector in the entire VRS. So you have multiple selectors selecting the same endpoint, we're going to have some precedence rules to determine which one matches. And then we're going to have to make sure that the endpoint is going to be used for mapping the endpoint to an ESG. How is the process with these tag selectors? First of all, we need to associate the tag to the endpoints or to some configuration objects on the API. We can attach policy tags to MAC addresses. We can attach tags to IP addresses. But then we can also attach tags to subnets, to IP subnets. Once the policy tags are attached to these different objects, we can use those tags on our tag selectors under the ESG to map those endpoints to a given ESG. So it's going to be a two-step process. With this example, we can see that MAC address A, MAC address B, and IP subnet C will belong to the ESG DevOps because they are using this particular tag. MAC address D, MAC address E, and IP address F will belong to this other ESG. Policy tags are an object. The class is the one that you see in the screen, tag, tag. And these objects can be attached to any configurable object on API. But the fact that you can attach the tag doesn't mean that we are going to use it for ESGs. For ESGs in particular, we only use it or we can only attach these objects, these policy tags, to the elements that you see here on the screen, a BD subnet, an IP address, an endpoint IP address, the endpoint MAC address. Or we can use it for other tasks. But you can use it for when you configure a static endpoint. Notice that for IP address and MAC address, we are using these classes, which are new for ESGs. They were introduced in 5.2. And the magic with these classes, the important point is that you can configure them even if the endpoint hasn't been discovered yet on the fabric. So you can configure all these things in advance. And when the endpoint is discovered and you discover this IP address or MAC address, then the endpoint will be moved to the ESG. But the configuration is different. It's detached from the fact that you discover or don't discover the IP address or the MAC address of the endpoint. That's a very important difference. Where you can configure that, you can see where you can configure this on the UI. We added a new section on the UI on this particular area that is called Policy Tags. And here you can click the plus and you can add the different tags, the key value pairs, basically. If you're looking for the endpoint ones, you can configure them here. So even if the endpoint doesn't exist yet, you can configure them here. You can pre-configure those tag associations here in this section. Policy tags, keep in mind, they are not annotations. Those are different objects and they are used for different purposes. And as I mentioned before, policy tags are not specific to ESG. But so far in ACI, we only use them for ESG. There is no other use for that, at least on the ACI code. If you want to use it for something else, feel free. But we are not using it for anything else right now. So how can I use tags to classify my endpoints? Well, that depends on how you want to classify your endpoints. If you want to use a range of IPs, you will use the BD subnet. You will configure Add Policy Tags on the BD subnet. You can configure it for the entire BD subnet or for a subset of the BD subnet you choose. You can configure that for a specific IP address using the endpoint IP tag. You can configure that for a specific MAC addresses using the endpoint MAC tags. But probably the most interesting thing is that you can configure it for a specific MAC address using the endpoint MAC tags. The other point is to use VMware VMM integration. When you have VMware VMM integration, we pull the tags from vCenter automatically, and we configure them on ACI. And you don't have to do nothing. We just read those tags from vCenter and populate them on ACI. And that's probably the most recommended, the nicest way to use ESGs on ACI. You might be wondering at this point, well, what if my customer doesn't have VMM integration? Can I use read-only VMM? Unfortunately, the answer so far is no, you cannot. It's only supported with read-write VMM integration. We have a defect open for or an enhancement open for this being supported with read-only VMMs. And hopefully in 6.1.2, 6.1.3, that's going to be supported. But so far, it is not supported. Last but not least, we can also configure that on static endpoints. If you have some styling host and you are configuring static endpoints, you can also touch the policy tags. And you can also do that at the same moment. By the way, just a clarification, even if you don't have VMM integration or maybe your customer is using, I don't know, Nutanix, and Nutanix doesn't support that yet, no problem. I mean, there is an ACI for that. It's super simple to read those information from whatever VMM you're using or whatever database your customer uses for that. Read that information, manipulate that a little bit, and push that to ACI. That's really straightforward. The forward is probably less than 50 lines of code. And you can do that periodically every few minutes to update the ESG association of endpoints. That's super straightforward. So the fact that you don't have VMM integration shouldn't stop you. You actually, as a partner, can provide additional value to the customer by doing this very simple integration between ACI and whatever VMM your customer is using. Okay? I'm not expecting you to configure all Macs manually on ACI. You're going to use automation for that. Last but not least, the EPG selector. The EPG selector, as I was mentioning before, is super critical because it's going to be the first selector we're going to use on our migration process. The EPG selector essentially helps us to map an entire EPG to a given ESG. You can map one EPG. You can map multiple of them, as you can see here on the screen. But why this EPG selector is so important? Because the first thing that you need to keep in mind when you're using ESG is that contracts between EPGs and ESGs are not supported. You cannot apply a contract to on one side an EPG and on the other side an ESG. That's going to be rejected by ACI. So how can I do the migration then without any impact? That's where the EPG selector comes into play. Whenever you use an EPG selector, the ESG, where that EPG is mapped, is not supported. So the contract that you're going to map to is going to inherit all the contracts that the EPG had before. So, yes, you cannot apply the contract yourself, but by using the EPG selector, we're going to inherit those contracts. During the migration, that communication is going to be possible between an EPG and an ESG. Let me show you an example. Let's imagine we have EPG A and EPG B. We have contract X between them, so they can talk using this contract. And we want to migrate EPG A to ESG A. We want to migrate endpoint 1 and endpoint 2 to the new ESG A. But at the same time, we also want to keep communication to the EPG B. We don't want to break that communication. How can we do that? I cannot supply contract X between EPG B and ESG A. That's not possible. If I'm using the EPG selector and I'm selecting here the EPG A under the ESG A, those endpoints are going to be now part of ESG A. But at the same time, the ESG A is going to be part of the ESG A. So, the EPG A is going to inherit the contract that was used by EPG A before. Really, under the hood, what is happening is that the EPG A PC tag is being replaced by the ESG A PC tag. Under the hood, for you. So, the CCAM will be modified with this small change. And beginning in that moment, this contract will also be used by the ESG. So, the endpoint 1 and endpoint 2 can use contract X to talk to endpoint 3 and 4. But they can also use contract Y to talk to endpoint 5. That's why the first selector that we are going to use in our process is going to be the EPG A to move away from EPGs into ESGs. And that's generally the first step in all your migrations. When you start migrating from EPGs to ESGs, the first thing that you should be doing is taking all your EPGs and migrate them to ESGs. How? It really depends on how your configuration is looking like at the beginning. If you have a scenario where you have multiple contracts and you have some sort of segmentation, you have contracts between EPGs and so on, then probably your migration process is going to be a one-to-one mapping between EPGs and ESGs. You will do this mapping as you see here. EPG A will be changed by ESG A. Contract X will be inherited. After that, you will configure this contract X here as well. Mimicking this configuration of EPGs but on the ESG level. And then the contract X can be removed. Keep in mind one thing. During this migration process, in this moment you see here on the screen, if I remove contract X, I will not be able to apply that again. So keep this contract between EPGs until you finish the migration and then you can remove them. In the meantime, they will be inherited and there is no problem with that. Perfect. So some guidelines regarding EPGs. You can map multiple EPGs to an ESG as you saw in the previous screenshot. That's perfectly fine. The EPGs must be part of the same tenant and also the same DRF as the ESG. Otherwise, you will not be able to select them. And after you do this configuration, this EPG selector is used, the EPG, you cannot do any more configuration on the EPG related to security. So you cannot attach any contract anymore. You cannot change the preferred group membership. You cannot configure intra-EPG installation or you cannot configure an intra-EPG contract. So keep in mind at the moment you use the EPG selector, security configuration on the EPG is gone. You can configure that on the ESG, of course, but you cannot do that on the EPG level. There is going to be a very important consideration with this, so keep this point in mind. I'm going to go back to this in a couple of slides. So as I mentioned, we start always your migration process using EPG selectors to migrate. So you can migrate from EPGs to ESG, and then you can do whatever better segmentation you want with ESGs. Route leaking, as I mentioned, I'm not going to have time to cover this in detail, but I'm going to go to the last slide of these three small slides I have here to explain how route leaking works today. Just to show you that route leaking is going to be super, super simple with ESGs, as I mentioned before. No subnet under the EPG. No need to use the flux under the BDC. No need to use the subnet anymore. All I need to do is go to the BRF, specify the prefix that I want to leak, and specify the destination BRF where I want to leak that subnet. That's all I need to do, and I do that on both directions, in BRFA and BRP, and my route leaking is working. Obviously, I need the contract as well to permit or deny communication, but for the leaking purposes, that's all you need to do. And you might be wondering, can I use that with EPGs? No. This is only possible if you use ESGs. So, if you use this route leaking approach, that's another reason to start using ESGs today. Okay. Let's move on to the more interesting part, which is the design considerations. Now that we have a clear understanding of what ESGs are and what are the different selectors that we can use, let's talk about what are the things that we have to keep in mind when we are doing this migration, not to have any problems. The first point is about what contract combinations are supported or not. As you can see, pretty much everything is supported with ESGs as well. Typical questions we get is PVR supported? Yes, PVR is supported. Same features you can do with EPGs, you can do it with ESGs, unless there is a special mention about it in the documentation, which I don't think there is. Contract inheritance, intra-ESGs, preferred groups, and all the combination of contracts that you see here. Okay. Basically, it's easier to say what is not supported. It's not supported the ESG to EPG contract as I mentioned before. The only exception for this is when you use the EPG selector, and in that case, ACI automatically will apply this contract for you, but you cannot apply the contract yourself. So, that restriction is fixed. Another thing that you cannot do is a contract between ESGs and a micro-segmented EPG. That's not possible. Last but not least, a book contract, which I don't think is very widely used. But it does support it as well. Okay. What if we have an endpoint that is actually matching different selectors that we have configured under different ESGs? What is the ESG that is going to be mapped to that endpoint? If that's the situation, the first thing that ACI is going to look at is these precedence orders that you see on the screen. So, depending on whether the traffic is switched or routed, we're going to use a different point. So, we're going to use this precedence order. And basically, ACI is going to use this precedence order to determine which is the selector that we're going to use and where the endpoint is going to be mapped to which ESG. You will notice that EPG selector is the last one. So, for our migration purposes, that's perfect because we're going to use EPG selector to begin with, and then we're going to use any other selectors like tax selectors, IP subnet selector, whatever, to move endpoint from that initial ESG to whatever ESG we want to map it to. But what if I am mapping the same endpoint to two different ESGs that have the same precedence? For example, I'm using two different tax from vCenter, which is exactly the same precedence. You can see that that's precedence number four, for example, for routed traffic. And I have two different tax selectors using BNN endpoint map tax, but they are mapping the endpoint to different ESG. Which one is going to be selected? Let me actually show you in another way what's the problem here. We have IP subnet. We have IP address A. In IP address A, we assign two different policy tax, and those two policy tax are actually mapping the endpoint to two different ESGs. What's going to happen here? Well, first of all, the first selector that you configure is the one that is going to classify the endpoint. So, imagine we configure this one first. That ESG is the one that we configure first. The IP address A will go to that ESG. And then when you configure the second one, you're going to get an error. It's going to tell you, hey, listen, you have this particular IP address, this particular endpoint that is matching two different tax selectors with same precedence. So, I don't know where to put it, right? I put it now on the original one where the original match is still active. But keep in mind you have duplicated tax selectors. What's the problem with these duplicated mass selectors? It's not deterministic. So, depending on the order, you can get one or the other. But the order may change. I don't know if they're an upgrade, if they're a reboot. Who knows? So, this is something that you need to avoid. You need to have a clear mapping of endpoints to ESG, a deterministic mapping of endpoints to ESG. If you ever get this problem, you need to go back to your policy tax and decide where you want the endpoint and remove one of the policy tax from your endpoint or remove one tax selector, depending on the scenario. I'm going to show you that in the video later because during our migration process, we're going to hit this problem, and we're going to resolve it. I'm going to show you what tools you have to use. And I'm going to show you how to make this in the best way. Okay. We were talking before about mass-based selectors and IP-based selectors. That basically means am I using the mass address of the endpoint or am I using the IP address of the endpoint? And depending on that, we have this different type of selectors classification. Then we have also the APG selector which doesn't fit any of these two categories. It's another category. But why I'm bringing this here? Because of the caveat that I mentioned before to you. When we are using IP-based selectors, we need to see the IP address of the packet. And because of that, the packet should be routed. If the packet is layer 2, I'm not going to use the IP selector. So the endpoint is going to be classified still to the original APG, and we're going to apply the contract on the original APG or potentially the packet might be dropped. So that's something important to keep in mind. Because of that, we're going to use the IP address of the packet. We recommend that you use MAC-based selectors whenever possible. It's a preferred option compared to IP-based selectors. And yeah, it's true that for customers, probably IP-based feels more natural. But when you use things like either automation or you use VMN integration with vCenter, that's not going to matter anymore. And MAC-based selectors is going to provide you better unpredictable results. So that's always the preference. Use MAC selectors whenever possible. You can still use IP-based selectors. I'm going to show you how you can use that, what's the workaround for that. A different view to this problem, let's see some scenarios to understand better what's happening here. Let's imagine we are mapping the MAC address A of the endpoint using ESG selector 1 or mapping this to ESG 1. The IP address is not matched to any ESG. What's going to happen? Well, both the MAC address and the IP address will be mapped to ESG 1. So when the packet is routed, I'm going to still use the MAC selector, and I'm going to classify the point equally for both MAC address and IP address. If you want to classify MAC address and IP address differently, that's probably – I don't see the use case for that, but it's possible. You can map that differently. You can map the MAC address to ESG 1 and the IP address to ESG 2. When the traffic is switched, I'm going to use ESG 1. When the traffic is routed, I'm going to use ESG 2. For me, that's a little bit confusing, but technically it is possible. The problem is with the other way around. If I configure only an IP-based selector and that's mapping the IP address to ESG 2, MAC address A is not going to be matched to any ESG. So it's going to try to use the original EPG PFE tag. If possible, if not possible, the packet will be drawn. Okay? That's another description of the same problem. But I guess by now, the problem is solved. It's more or less clear. The question is now how can I fix that? The fix for that is to make the packet to be routed always, even for switched traffic, even for layer 2 traffic. And how can I do that? By using proxy ARC on ACI. When you use proxy ARC, all the packets will go to the part of the ACI where we route the packet, and therefore the ACI address will always be inspected, and we can use the IP-based selector for both layer 3 and also layer 2 traffic. How can I configure proxy ARC on ACI? I have four options, but one of them is not possible for ESG. It's not a valid option. So basically, you have three options. Either you configure intra-EPG isolation, and after that, you enable proxy ARC manually. You will get the knob in the ACI UI to do that. Option two, you configure an intra-EPG contract, and that will enable proxy ARC automatically for you. I'm going to use one or the other. Well, it depends. Do you want to use the same one or the same one? If you want to block the communication between endpoints, if that's the case, intra-EPG is the solution. If you want to keep the same open communication as by default, you can configure an intra-EPG contract with unpermitted ending, and that will mimic the default behavior of ACI while configuring proxy ARC at the same time. Last but not least, when you configure VMM integration, you have to see the VMM domain. If you enable the allow microsegmentation flag, that's going to happen automatically. We're going to have to wait. We're going to use private VLANs on the for group, and we're going to also enable proxy ARC for you. So that's going to be automatically done. Again, you see VMM integration is the easiest way to use ESG, but it's not the only one. You have other options as well. Which one you're going to use, it depends on the use case, as I mentioned. Another typical design consideration or design questions, you might be thinking, okay, but my customers have the VRF in common. What do I do? Do I have the bridge domains in common? Or maybe have the bridge domains in common? Is it going to change anything? The answer is not much, a little. The only thing that is going to happen is that you may be able to use all the selectors or not all the selectors, depending on the scenario. If the VRF is in common, no problem. You can use all the selectors we saw today. If the VRF and the bridge domains are in common, the only one you cannot use is the VDSubNetPack selector. All the other ones can be used. If also your EPGs are in common, and I'm talking about the original EPGs, they are in common while the ESG is in a user tenant, in that case, you have a bit more restrictions. It is still possible, but you have a bit more restrictions to be aware of. Keep in mind, I'm talking about having the ESG on the user tenant and the EPGs in common. If the ESGs are also in common, you have no restrictions at all. The problem is when the EPGs are in common and the ESG is in a user tenant. Okay? Perfect. Another very important point to keep in mind. Let me go back. Sorry. When you have your VRF in common or your bridge domain in common, and you are configuring this endpoint IP selector or endpoint MAC selector, keep in mind that you could potentially match an endpoint that is not part of your tenant. Let me explain that. I have a VRF in common. I have a VRF in common. I have two user tenants, a tenant A and tenant B, using that VRF. They have the bridge domain configured on their own tenant, but they're using the common VRF. And I have IP address A on tenant A, IP address B on tenant B. I could potentially go to tenant A and configure an IP selector matching IP address B, which belongs to user tenant B. In that case, that IP address B will be part of my ESG on tenant A. So, that could be a potential security concern for some of your customers, depending on how they use tenant in their environment. So, keep that in mind that that's potentially possible. Why is that? Because the VRF, in the data plane level, the endpoint is learned on the VRF level, not on the tenant. Tenant is just a management domain. So, you can match that endpoint potentially if you want. Okay? It's a very important point to keep in mind and be aware of that when you're doing your designs. Perfect. Having said that, let's move on to the migration scenario. And let's just start by talking about how the typical network-centric deployments look like. Typically, what we see on customers is that they have a one-to-one mapping between bridge domains and EPGs. They probably have a single application profile or maybe a few of them. But the EPGs are very similar. They are mapping one-to-one to bridge domains. And they have their endpoints distributed everywhere across the public. They don't necessarily know how the applications are distributed across the public. They just see endpoints from an infrastructure engineer perspective. The application team obviously knows where the applications are or should know where the applications are. And those applications might be expressed across different EPGs. Even the same tier of the same application might be expressed across different subnets and different EPGs. And that's typically something that's not a good thing. That doesn't happen the first day. But it happens over time. When the customer grows, they need to provision more endpoints. And the subnet is already completely used. And they need to provision the endpoints as part of different subnets. That's probably something that in reality is probably not that extreme as we see here on this example. But it may happen anyway. Now, tiers might be distributed across different subnets and different EPGs. Which is why ESG are very useful. Because now I can map them together even if they are part of different subnets. But even without getting into that moment, let's continue talking about how the starting point is. So we have this one-to-one mapping between bridge domains and EPGs. And from a security perspective, maybe we're using preferred groups. And all the EPGs are part of the preferred groups. So we have open communication between them. Maybe we are using vset any. And we have a permit any any contract provided and consumed by the VC any. So all the EPGs can talk to each other as well. Maybe we have these plus a few contracts here and there. That's probably the most common case. I'm not drawing here the external EPGs and the layers three out. But maybe we can have these plus the external EPG with a specific contract. It will be some sort of variation of what is showing here. It could be also unenforced BRF. Which is, by the way, a very bad idea. Because moving away from unenforced BRF is a very tricky point. So we always recommend that you start with either vset any or preferred groups. Or with ESGs if you are starting now from scratch in 5.2. Okay? So that's the starting point. So now what are we going to do? We're going to migrate from EPGs to ESGs. And then we're going to start applying segmentation. And we can apply as much segmentation as we want. We can have a single security zone per BRF using ESGs. That will be equivalent to the same amount of segmentation. So we can move to what we have now in the starting point. Using preferred groups or vset any. That's going to be equivalent. But using ESGs. Maybe not too much value to move to ESGs at this point. But at least you are in ESGs already. And you can do further segmentation in a very easy way once you are on ESGs. Maybe you want to do something a bit more different and have multiple security zones per BRF. So it's like having multiple preferred groups per BRF. You know that's not something that is not supported. We only support one preferred group per BRF. But using ESGs you can simulate the same behavior and have multiple preferred groups, if you will, per BRF. We can also do segmentation per application. That's the one that I would recommend to look at as a minimum because you're going to get extra visibility. You will see that in the migration example later. Or you can even go to segmentation per application service or per application tier. Or you can do even further micro segmentation as you need. The important point is that once you are using ESGs, you can move to one security model to another or any variation of them very easily. You don't need to change the preferred groups where the VMs are attached to. You don't need to move the VM from one core group to another or do any kind of motion or migration. You don't need to change the VLAN that the endpoint is using at all. You don't need to change the interface where your endpoint is connected. It's all completely dynamic. It's all based on attributes of the endpoint, either the IP address, the MAC address, a task that you assign to them. But it's all dynamic. The endpoint will not move. The networking backing is not going to change. It's going to change only the configuration on your ACI fabric, and that's all. Or maybe on your vCenter with the task. Let's see these different scenarios with the diagram, starting from the one with lowest segmentation that will be using a single security zone. That's equivalent to the one with the lowest segmentation. That's equivalent to preferred groups, as we were mentioning before. You can also have multiple security groups per VRF. They can be in this direction, as you see here, so including endpoints from all the subnets, or they can be divided by subnets. So, for example, security group can include subnet 1, 2, and 3, and security group 2 can include 4, 5, 6, and 7. And in that case, instead of using tag selectors, I might be using EPD selectors for that. So you can decide how you want to make the split. But that's completely flexible. The one that I will recommend to start with is based on applications. So you put all the endpoints of a given application inside the same ESG and inside the same application profile. So in this case, you have an application profile per application, and inside that, you have all the endpoints of the same application under the same ESG. So inside the application, you don't have segmentation. You don't have segmentation at all, but you have segmentation if you want across different applications. You can also have open communication across applications. That's fine. And you're going to still have some benefits using this segmentation, even without contracts. And I'll show you that in the demo later. Last but not least, you can do a segmentation per application service. That's going to be a very good idea for your customers for having a CETA-TRAPS model, but it's something that you can evolve later if you want, if your customer is ready. If your customer has a CETA-TRAPS model, you can do that. If your customer has information to do so, and maybe they want to do it for specific applications but not for everything. So the same idea as we were talking from the DS0 on ACI is also valid here. Perfect. So let's jump into the migration process. We started with a situation where we have a completely network-centric approach, one EPG mapping to one bridge domain, open communication between all these EPGs. And we're going to start our migration to ESGs. Given we have an open communication, we have to do a segmentation. So let's go ahead and start the segmentation. So what I'm going to do is I'm going to start the segmentation and we're going to start the open communication model today. The first thing we're going to do is to migrate to ESGs respecting that open communication model. And because of that, we're going to use a single ESG to keep this open communication. So I'm going to create a new ESG. I'm going to call it network segments. Name, you can use whatever you want. And what I'm going to do is I'm going to map all the EPGs in my BRF into that ESG. So after I do that, all the EPGs can still talk to each other, even without refer group or visit any, because they belong to the same ESG. And here are the same rules as EPGs apply. All the endpoints within the same ESG can talk to each other with no contract. Endpoints of different ESGs, they need a contract to talk to each other. EPG selector has the lowest precedent, so after I do this initial move, I can then move these endpoints to different ESGs in a flexible way. And whatever selector I use, as long as it's not EPG selector, is going to take precedence. So that's going to be the idea, basically. I'm going to have a single ESG for my entire BRF. All the endpoints will belong to this ESG. Communication will be completely open. At this point, I don't even need prefer group. I don't need refer group or visit any. I could potentially remove them if I want from my configuration. Perfect. I kind of stay there, but as I mentioned, there is probably not too much value to stay in step number one. So let's see what could be the step number two. Step number two will be to create an application profile and ESG per application. One single ESG per application. We don't want segmentation inside each of the applications, but we want to have a separation per application, which is very important. So it's very clear. The rest of the endpoints will remain in the network segment, and they will be migrated to the respective applications as I go through the process. So I will start with one application at a time. We'll create this application for this online boutique. I will move to these all services ESG the endpoints for these online boutiques, and the rest of the endpoints will remain on the network segment. And because of that, I need some sort of open communication here. So potentially, you're going to configure here a contract with PerMitt. You can also enable preferred group is the one I'm going to use in the demo because I'm lazy. So I'm going to enable preferred group here and here, and they're going to be able to talk to each other with no contract. You can use whatever process you want, but you need to ensure that during the migration, my communication from all services back to network segments is possible. What kind of selectors I'm going to use here? I'm going to use any of the selectors that I have in the portfolio. I'm going to choose the one that is better for me. As I mentioned before, MAC selectors are preferred, so we're going to use those first if possible. After the first application is done, I'm going to continue with the second application and then the third, and I'm going to progressively move until I have all the endpoints classified on the respective application. What if I have an endpoint that is used by different applications, like a common database service? Well, in that case, I will make those endpoints possible. I'm going to make them part of their own ESG called, for example, database services, and I'm going to make them like a shared service. And they will be separated from all the applications, and all the applications will use those databases. So you get the idea. Okay. So once we have our application ESG, how we can move the endpoints to that ESG? As we mentioned, MAC-based selectors are preferred. The preferred one is vCenter tags if you have vCenter integration. If you don't, then you don't have to do that. The next one will be endpoint MAC tags. As we mentioned, you can use automation to provision them. You should use automation to provision them. If that's not possible, you can use endpoint IP tags. If not, you can use vC-subnet and IP subnet selector. Those are probably not very useful in most of the scenarios, but those are all possible options as well. Remember, when you are planning to use IP-based selector, you have the problem of the – or the caveat of the layer 2 traffic. So you should be enabling proxy art. The important thing that I want to call out here – and it's super, super important, so be all of you aware of this. If you want to – if you are planning to use IP-based selectors, you should be enabling these proxy art before you even start the migration, before you even do step number one, before you have used any EPG selector at all. Why is that? Well, remember that the moment you use an EPG selector, you should be enabling proxy art. So, if you are using a proxy art selector, you cannot configure anymore any segmentation – any security configuration under the EPG. So, you will not be able to enable intra-EPG isolation. You will not be able to configure an intra-EPG contract anymore. So, you will not be able to enable proxy art, basically. Okay? So, you will need to roll back your migration, enable proxy art, and then come back and repeat all the steps. That's why you need to stop before starting the migration and think or ask your customer, are we planning to use IP-based selector? If the answer is yes or I don't know, enable proxy art. If the answer is no, I'm sure I'm not going to use that because I have this other integration that's better, okay, you can keep proxy art disabled. But if you have some doubts, if you are not completely sure your customer is not going to use IP-based selectors, you should be enabling proxy art. And before you ask me, I have a hidden slide that I didn't cover, but you have it for your reference. What if I use proxy art? If I enable proxy art, what is the impact? There are, very quickly, there are two things that would happen that you have to keep in mind. First of all, the CPU usage may increase because with proxy art, all the art requests will go to the CPU of the switchers, and the switcher will reply with their own MAC address. So, you will see an increase on the CPU usage. Depending on the scale, that might be a problem or not. Typically, it will not be a problem, but if you have a bigger scale, that could be something to be aware of. The second point is that even though the art requests are passed to the CPU, they are going through COPs, through control plane policy. And because of that, if you have a situation that makes a lot of art resolutions to be triggered at the same time, that might be rate limited by COPs, and you may see that some resolutions take a little bit longer. Keep that in mind. If that's the situation, you may think about increasing the COPs thresholds. Or if it's only a very small number, you may think about increasing the thresholds. If that happens only under very specific circumstances, you may live with it, and that's all. Okay? I wanted to bring this. It's also a hidden slide, so it will be in the PDF, but I wanted to mention very quickly. Let's go back to the scenario. Here we go. Okay? So, because of that, keep in mind, if you need to enable proxy art because you want to use IP-based selectors, do it before starting the migration. You cannot do it after. Perfect. A couple of screenshots. Okay. So, this is a very simple example of how the vCenter tags work. In the PIDW that Joe did, I have a reference to that at the end of the session. He went through all the details. He did a very detailed demo of how this works. I'm going to show you where you can find the PIDW at the end of today's presentation. So, basically, you will assign the tags on vCenter, and then the tags can be used as tag selectors by ACI, and you can map them points using these tag selectors very easily. Okay. I just wanted to reiterate that when you are using ESG, you don't need to change the network backing of the endpoints. Everything stays the same. No move to another per group. No changes on the VLANs. No changes on the interfaces. It's everything dynamic. You just use those tags, and the endpoints will move to the new ESGs, and that movement will only happen on ACI side. On the vCenter side, everything remains as it was before. Okay. I can stop here again. So, I can decide to do step number two and then continue with more segmentation. What are the benefits so far if I stay with this model where I have the endpoints to applications, but there is no contract between applications, and there is no further segmentation? What I'm getting so far is visibility. I can now go to every application profile, and I can see all the endpoints that belong to that application. I can see where those endpoints are connected. What is the hypervisor where they are? What are the interfaces that they are using to connect to the fabric? What is the VLAN they are using? And all that information is gold when you are planning maintenance windows, you are planning activities in your network. I can very quickly know if I need to replace a switch because I need to do an RMA. I can very quickly know what are the applications that are going to be impacted by this maintenance. I know the endpoints. I always know the endpoints. But now I can also know what the endpoints are. I can tell my application team, hey, listen, these five applications are going to get impacted by this maintenance window we're going to do tomorrow. Okay, so that's something that your customers are getting just by doing this, which is, by the way, super, super simple. If they want to continue, they can continue. They can continue by applying segmentation or security between the different applications. That will be the most simple thing to do. Once you have the division between applications, you can do it. You can just apply a contract between them. You can associate or include PBR as part of that contract so you can make the traffic across or between different applications to go through a firewall. And another thing that you can do, which I find very interesting, is that you can apply an intra-ESG contract with redirection to another set of services. It could be a firewall. It could be something else. You can also use copy services if you want, if you don't want to make the traffic go through the firewall but get a copy. And with that traffic, you can use that to build your application dependency mapping. So basically to get all the flows going inside this ESG, inside this application, know how the different endpoints are communicating, and use that for future further segmentation. Yes, we're going to provide some other tools. Potentially in Nexus Dashboard Insights, we're going to provide some sort of ADM as well when we have traffic analytics. That's something we are evaluating. But yes, we're going to provide some other tools. But that's something that you can do starting from today if you want. That will allow me to move to step number four, which will be once I know how the application communicates, how the different endpoints communicate, I can build this sort of dependency mapping. And I can apply this segmentation on ACI as well. I can use, again, policy tags and tag selectors to move the endpoints to the corresponding tier or service. And then apply a specific contract between these services. Keep in mind I can also use this segmentation and apply open contracts. That will also give me visibility but no segmentation. But if I have the dependency mapping, I can do segmentation as well. While I'm doing that, keep in mind you should also keep the communication open until you do the migration so that endpoints can communicate back to the old services until all of them are classified. And then you can cut this communication. Okay. So let's go into the demo. And, Joe, if you can launch now the second poll of today. It's a very quick demo. I recorded it to keep the timing. I'm going to shut my video off so I provide a bit more bandwidth and we can see the video correctly. Okay. So let's go to the video. The initial situation is that we have this network-centric approach. We are using preferred groups. So we have a one-to-one mapping between EPD and BD with preferred group enabled. We have a contract to communicate out to the outside. But all the EPDs are part of the preferred group. The step number one is going to be to create a new application profile. I'm going to call it EPD match ESG. And inside this application profile, I will create a new ESG, which is going to be my all network segments EPDs, ESG. I'm going to map all my EPDs as part of the network. So I'm going to have open communication as well. But I'm going to move away from ESG. This ESG is going to be part of the preferred group as well. So I can do this migration slowly. And while the migration is being done, communication is working. I'm going to show you that. I'm going to move just one single EPD to this ESG. I'm going to run a couple of things. The one in the top is between application tiers. The one in the bottom is from the outside to the front end of my application. If I move the subnet where this endpoint leads, you see that thing still works. And everything is working correctly because I have open communication. I have preferred groups. Okay? If I wait a second, I'm going to see that my endpoints are starting to show here on ACI. Keep in mind that this is just a UI thing. The classification on the data plane happens pretty much instantly. This is just the time it takes the UI to show me the results. But on the data plane, it's immediate or almost immediate. So I move the rest of the EPDs to this new network segment ESG. So now if I wait a few seconds, I'm going to see those endpoints showing here and all the endpoints being classified. Now, notice I'm classifying both the MAC address and the IP address. What's the second step? I'm going to create a new application profile per application. I'm going to start with my online boutique application. And I'm going to create one single ESG for that application. So, so far, I'm not doing segmentation inside the application. I'm doing segmentation just across applications. I'm going to make this part of preferred groups as well so I can keep communication open while I'm doing this migration. Segmentation will be the last part. So I'm moving endpoints around, but I'm keeping communication open. I could potentially close the communication at this point if I want. I'm going to use vCenter tags for this. Let me stop the video one second. And you notice that I have two different tags. I have one that classifies the endpoint to the application they belong to. And I have another one that classifies the endpoint to the specific function or specific service inside the application. So at this point, I'm going to use the app tag to classify all these endpoints to the corresponding app. That's something that, by the way, most likely your customers will be able to tell you. The application teams know perfectly fine what endpoints they're using for each application. That's something simple. Knowing the ports inside the application, that's another story. But this level of segmentation is something that probably they can achieve. I'm pretty sure of that. As you can see, the moment I use the policy tags, the endpoints are removed from the network segment, and they are moved into the online boutique application. Communication is still open. It is still working. Now let's go to the last step. Potentially, many of you will stop at this point, will maybe do this per application, and apply contract between them. That's perfectly fine. That's good enough for a big percentage of the users. But it's also a good thing for each of our customers. If you want to go further with, let's say, critical applications, you can do that. In this case, I'm using, because I'm lazy, I'm using Nexus as code to program all the different ESDs for each application tier or service. I'm configuring the tag selectors as well using Nexus as code, all the contracts. Everything is being configured. Of course, you can do that manually. But I'm using Nexus as code here. I'm using Terraform under the hood. And I'm running this. And you will see that immediately I'm going to get all these ESDs configured. In this case, I'm using the function tag of the application. So I'm going to move the application based on this tag that they have applied. When I do this, if I go to the ESDs for each tier, you are going to notice that I don't have any endpoint. And my segmentation is not applied. You see the thing is still working. Why is this happening? Because I'm using Terraform. So I'm going to use two tag selectors with the same precedence to configure the endpoint to two different ESDs. That, as I mentioned before, is going to raise an error. It's going to tell me, you have duplicated tags with the same precedence. You cannot do that. You need to go and fix that. But it's actually giving me a very good hint. I can go into operational. I can go into tag selectors. I can go into match but not associated. And I can see the endpoint that could be part of these ESDs. But they are not because they are matched somewhere else. And I can use that information, which is very valuable, to understand if my classification is working fine before I remove the other tag selector. So actually you can see that we did a very good job with the visibility on ESD configuration. So that's I think we did a pretty good job with that. So I'm going to remove that tag selector now. And once I do that, all the endpoint will be removed from here. And we'll move to the corresponding tier. And at that point, you see the ping stops because now I'm applying segmentation between the different tiers. And ping is not permitted. And that's something that is expected. So you see that my communication from the external to the front end continues to work. But between application tiers, stopped. And that's because my segmentation is actually working correctly. So now we can see that the endpoints move to the corresponding ESDs. The segmentation is stopped. The segmentation is in place. No endpoints under the all services. They are all classified to the corresponding tier. So my migration is over. That's very quickly in five minutes. Actually real time, I speed up some parts. But real time can take like 10 minutes. In production, it will take longer, of course. You need to be more careful. But you can see that the process is actually quite straightforward, quite simple to follow. Probably, as always, the most tricky part is to know the segmentation. If you want to do segmentation inside, you need to know the segmentation. But across applications, it's something way simpler to achieve. So with that being said, I'm going to summarize what we saw today. We saw that you can use ESDs to apply whatever security policy you want. EPGs will remain, but they will be used only for networking pieces, not for security. Security will be done on the ESDs. And the ESDs will provide you better flexibility and more dynamic segmentation. You can change the segmentation as you need. in a very dynamic way without changing the network backing of the endpoints. How much segmentation you can achieve, whatever you want. You can start simple, do multiple security groups per BRF, maybe do per application segmentation, and then you can move further if your customer is ready to do that. If not, you can stay at a comfortable level and apply segmentation with ACI. Yeah, a couple of things before I close. So I went a bit over. There are two things that you can explore to learn more about ESGs. First of all, Joe Wetherski did a webinar, PAW, about ESGs, in which he went through all the details of the different selectors you can use. He did a very complete demo showing the different selectors. So that's a very recommended webinar to take a look at. It's on Sales Connect. So you can go there. And find it. The second thing is that part of our team, including also Steve Sharman, which I don't know if he's in Amsterdam today, but they wrote a design guide for ESGs, which also goes through some of the points that I talk about today. And it goes in a little bit more detail. So you can actually take a look at that design guide. It's very easy to read. And it will show you also or provide you a bit more information about ESGs. So with that being said, thank you so much. And apologies, again, for not being there in person. But medical condition is what dictates it. But I hope the session was engaging enough to be connected, even if it's remotely. Silvano, Joe, back to you guys in the room.